# 请将其中的 registry 改为你自己的镜像源
registry = "https://registry.npmmirror.com"

# 将与模式匹配的依赖提升到根模块目录。提升到根模块目录意味着应用代码将有权访问幻像依赖，即使它们不正确地修改了解析策略。
public-hoist-pattern[]=eslint
public-hoist-pattern[]=prettier
public-hoist-pattern[]=prettier-plugin-tailwindcss
public-hoist-pattern[]=stylelint
public-hoist-pattern[]=@commitlint/*
public-hoist-pattern[]=czg

# 设置为 true，将自动安装任何缺失的非可选对等依赖
auto-install-peers = true
# 设置为 true 表示忽略工作区根目录检查(可以安装依赖在根目录)
ignore-workspace-root-check = true
# 当此设置设置为 true 时，具有对等依赖的包将在对等解析后进行数据去重
dedupe-peer-dependents = true
# pnpm 版本，在 9.0 后 pnpm 修改 link-workspace-packages 的默认值为 false。该属性开启后，你在安装依赖时优先在本地链接(将链接到工作区依赖项，而不是将其复制到 node_modules 目录中)，而不是从 registry（远程） 中下载。
# 或则在终端使用命令：pnpm add @vbird/tsconfig -D --link-workspace-packages=true
# 安装到某个内部应用内：pnpm add @vbird/tsconfig --filter @vbird/web-element --link-workspace-packages=true
link-workspace-packages = true
# 控制如何将从工作区链接的依赖添加到 package.json
# https://pnpm.nodejs.cn/npmrc#save-workspace-protocol
save-workspace-protocol = rolling
save-prefix = ""
